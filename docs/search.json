[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LaTeX Konuları",
    "section": "",
    "text": "\\(\\LaTeX\\) teknik dokümanlar hazırlamada sıklıkla kullanılan bir sistemidir. Leslie Lamport tarafından geliştirilmiş olup, özellikle akademik ve bilimsel dokümanların hazırlanmasında yaygın olarak kullanılmaktadır.\n\\(\\LaTeX\\)’de kullanılan belge sınıflarını şöyle sıralayabiliriz:\n\narticle: Makale türündeki belgeler için kullanılır.\nreport: Daha uzun belgeler ve raporlar için uygundur.\nbook: Kitap formatındaki belgeler için kullanılır.\nletter: Mektup yazmak için özel bir sınıftır.\nbeamer: Sunumlar hazırlamak için kullanılır.\nslides: Basit sunumlar için kullanılır.\n\n\\(\\LaTeX\\)’in sunduğu bu belge sınıfları, kullanıcıların ihtiyaçlarına göre farklı formatlarda dokümanlar oluşturmasına olanak tanır. Her sınıf, belirli bir türdeki belge için optimize edilmiştir ve farklı özellikler sunar.\n\\(\\LaTeX\\)’in sunduğu avantajlar ve Word gibi kelime işlemcilere göre avantajları şunlardır:\n\nYüksek Kalite: \\(\\LaTeX\\), özellikle matematiksel ifadeler ve bilimsel notasyonlar için yüksek kaliteli çıktı sağlar.\nOtomatik Biçimlendirme: Belge yapısını otomatik olarak yönetir, bu da kullanıcıların biçimlendirme ile uğraşmadan içeriğe odaklanmasını sağlar.\nReferans Yönetimi: Bibliyografya ve atıf yönetimi konusunda güçlü araçlar sunar.\nEsneklik ve Özelleştirme: Kullanıcılar, paketler ve makrolar aracılığıyla belgelerini özelleştirebilirler.\nAçık Kaynak: \\(\\LaTeX\\) ücretsizdir ve geniş bir kullanıcı topluluğu tarafından desteklenir.\nUzun Belgeler İçin İdeal: Kitaplar, tezler ve raporlar gibi uzun belgeler için mükemmeldir.\nPlatform Bağımsızlığı: \\(\\LaTeX\\) her türlü işletim sisteminde çalışabilir.\nSürüm Kontrolü ile Uyumlu: Metin tabanlı yapısı, sürüm kontrol sistemleriyle kolayca entegre olmasını sağlar.\nProfesyonel Görünüm: \\(\\LaTeX\\) ile hazırlanan belgeler genellikle daha profesyonel ve düzenli görünür.\nMatematiksel İfadeler: \\(\\LaTeX\\), karmaşık matematiksel ifadeleri kolayca yazmayı sağlar.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Ana Sayfa</span>"
    ]
  },
  {
    "objectID": "chapters/introduction.html",
    "href": "chapters/introduction.html",
    "title": "2  LaTeX’de Türkçe Belgeleme",
    "section": "",
    "text": "\\(\\LaTeX\\) ile Türkçe doküman hazırlamak için bazı özel ayarlar ve paketler kullanmak gerekmektedir. Bu bölümde, LaTeX’te Türkçe karakterlerin doğru görüntülenmesi ve yazım kurallarına uygun dokümanlar oluşturulması için gerekli adımları inceleyeceğiz.\n\nturkish babel paketi\n\nLaTeX’te Türkçe karakterlerin doğru bir şekilde işlenmesi için babel paketini kullanmak önemlidir. Bu paket, Türkçe diline özgü karakterlerin ve yazım kurallarının doğru uygulanmasını sağlar. Aşağıda, babel paketinin nasıl yükleneceği ve kullanılacağına dair bir örnek verilmiştir:\n\\usepackage[turkish]{babel}\nBu komutu dokümanınızın preamble (ön ayar) kısmına ekleyerek Türkçe karakterlerin doğru bir şekilde işlenmesini sağlayabilirsiniz. Ancak komutun opsiyonlarında birtakım eklemeler yapılması gerekmektedir. Bunun için kodu aşağıdaki gibi düzenlemeliyiz.\n\\usepackage[turkish, shorthands=:!]{babel}\nTürkçe olarak makale (article) sınıfında bir doküman oluşturmak için aşağıdaki örneği inceleyebilirsiniz:\n\\documentclass{article}\n\\usepackage[turkish, shorthands=:!]{babel}\n\\title{\\LaTeX{} ile Türkçe Makale Hazırlama}\n\\author{Ali İhsan ÇANAKOĞLU}\n\\date{\\today}\n\\begin{document}\n\\maketitle\n\\begin{abstract}\nBu makalede, \\LaTeX{} ile Türkçe doküman hazırlamanın temel adımları ve ipuçları ele alınmıştır.\n\\end{abstract}\n\\section{Giriş}\nMakalenizin giriş kısmı buraya gelecek.\n\\end{document}\nYukarıdaki örnekte, babel paketinin turkish ve shorthands=:! seçenekleri ile yüklendiğine dikkat edin. Bu ayarlar, Türkçe karakterlerin doğru bir şekilde işlenmesini sağlar. Ayrıca, makalenin başlığı, yazarı ve tarihi gibi temel bilgileri de ekledik.\nBu stil henüz fi birleşik harfini (ligature) düzgün şekilde ele almamaktadır. Elle f{}i veya f{}i yazarak bu sorunu çözebilirsiniz, ancak bunu otomatik olarak yapmak da mümkündür. pdfTEX ve tek dilli belgelerde, örneğin microtype paketini kullanabilirsiniz:\n\\usepackage{microtype}\n\\DisableLigatures[f]{encoding = *, family = *}\nDaha fazla bilgi için CTAN’daki Türkçe babel paketinin dokümanına turkish babel bakabilirsiniz.\nBu temel ayarlarla, LaTeX’te Türkçe dokümanlar hazırlamaya başlayabilirsiniz. İlerleyen bölümlerde, daha gelişmiş özellikler ve ipuçları üzerinde duracağız.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>LaTeX'de Türkçe Belgeleme</span>"
    ]
  },
  {
    "objectID": "chapters/chapter1.html",
    "href": "chapters/chapter1.html",
    "title": "3  Geometri Ayarları",
    "section": "",
    "text": "\\(\\LaTeX\\) ile doküman hazırlarken sayfa düzeni ve kenar boşlukları gibi geometrik ayarları yapmak için geometry paketini kullanabilirsiniz. Bu paket, sayfa boyutlarını, kenar boşluklarını ve diğer düzenleme seçeneklerini kolayca yapılandırmanıza olanak tanır. Aşağıda, geometry paketinin nasıl yükleneceği ve kullanılacağına dair bir örnek verilmiştir:\n\\usepackage[a4paper, margin=2cm]{geometry}\nYukarıdaki örnekte, a4paper seçeneği ile A4 boyutunda bir sayfa ayarlanmış ve margin=2cm seçeneği ile tüm kenar boşlukları 2 santimetre olarak belirlenmiştir. İhtiyaçlarınıza göre bu değerleri değiştirebilirsiniz.\nÜst, alt, iç ve dış kenar boşluklarını ayrı ayrı ayarlamak için aşağıdaki seçenekleri kullanabilirsiniz: - top: Üst kenar boşluğu. - bottom: Alt kenar boşluğu. - left: İç kenar boşluğu. - right: Dış kenar boşluğu. Örneğin:\n\\usepackage[top=1cm, bottom=1cm, left=1cm, right=1cm]{geometry}     \nBu komut, tüm kenar boşluklarını 1 santimetre olarak ayarlar. Bununla birlikte, geometry paketi birçok farklı seçenek sunar. Örneğin, sayfa boyutunu letterpaper, legalpaper gibi farklı formatlarda ayarlayabilir veya özel boyutlar belirleyebilirsiniz. Ayrıca, landscape seçeneği ile sayfayı yatay moda çevirebilirsiniz.\n\\usepackage[letterpaper, landscape]{geometry}   \nDaha fazla bilgi ve seçenekler için geometry paketinin dokümantasyonuna geometry package adresinden ulaşabilirsiniz.\n\nSatır Aralığı Ayarları\n\nSatırlar arası boşlukları ayarlamak için setspace paketini kullanabilirsiniz. Bu paket, tek satır, 1.5 satır ve çift satır aralığı gibi farklı seçenekler sunar. Aşağıda, setspace paketinin nasıl yükleneceği ve kullanılacağına dair bir örnek verilmiştir:\n\\usepackage{setspace}\nBu paket yüklendikten sonra, dokümanınızın tamamında veya belirli bölümlerinde satır aralığını ayarlayabilirsiniz. Örneğin, tüm doküman için 1.5 satır aralığı ayarlamak için:\n\\setspace{1.5em}    \nVeya sadece belirli bir bölüm için çift satır aralığı kullanmak isterseniz:\n\\begin{doublespace}\nBu bölümde çift satır aralığı kullanılıyor.\n\\end{doublespace}\nAyrıca, singlespace ve onehalfspace ortamlarını kullanarak tek satır ve 1.5 satır aralığını da uygulayabilirsiniz:\n\\begin{singlespace}\nBu bölümde tek satır aralığı kullanılıyor.\n\\end{singlespace}\n\\begin{onehalfspace}\nBu bölümde 1.5 satır aralığı kullanılıyor.\n\\end{onehalfspace}\nDaha fazla bilgi ve seçenekler için setspace paketinin dokümantasyonuna setspace package adresinden ulaşabilirsiniz.\n\nParagraf Ayarları\n\nParagraf biçimlendirmesi için parskip ve paralist gibi paketleri kullanabilirsiniz. parskip paketi, paragraf başlarındaki girintileri kaldırır ve paragraflar arasına boşluk ekler. Aşağıda, parskip paketinin nasıl yükleneceği ve kullanılacağına dair bir örnek verilmiştir:\n\\usepackage{parskip}\nBu paket yüklendikten sonra, dokümanınızdaki tüm paragraflarda girintiler kaldırılır ve paragraflar arasında boşluk bırakılır. Bu, özellikle akademik ve teknik dokümanlarda daha temiz bir görünüm sağlar. Örneğin:\n\\documentclass{article}\n\\usepackage{parskip}\n\\begin{document}\n\\begin{parskip} \nBu, paragraflar arasında boşluk bırakır ve paragraf başlarındaki girintileri kaldırır.\n\\end{parskip}\n\\end{document}  \nparalist paketi ise, liste ortamlarını daha esnek hale getirir ve farklı liste stilleri oluşturmanıza olanak tanır. Aşağıda, paralist paketinin nasıl yükleneceği ve kullanılacağına dair bir örnek verilmiştir:\n\\usepackage{paralist}   \nBu paket yüklendikten sonra, inparaenum, inparaitem ve inparadesc gibi ortamları kullanarak liste öğelerini paragraf içinde sıralayabilirsiniz. Örneğin:\n\\begin{inparaenum}[(a)]\n\\item Birinci madde,\n\\item İkinci madde,\n\\item Üçüncü madde.\n\\end{inparaenum}\nDokümandaki ilk paragrafın girintili olması için indentfirst paketini kullanabilirsiniz. Bu paket, dokümandaki ilk paragrafın da diğer paragraflar gibi girintili olmasını sağlar. Aşağıda, indentfirst paketinin nasıl yükleneceği ve kullanılacağına dair bir örnek verilmiştir:\n\\usepackage{indentfirst}\nBu paket yüklendikten sonra, dokümanınızdaki tüm paragraflar, ilk paragraf dahil olmak üzere girintili olacaktır. Örneğin:\n\\documentclass{article}\n\\usepackage{indentfirst}\n\\begin{document}\nBu, dokümandaki ilk paragraf ve girintili olacaktır.    \n\\end{document}\n\nBaşlık ve Altbilgi Ayarları\n\nSayfa başlıkları ve altbilgileri için fancyhdr paketini kullanabilirsiniz. Bu paket, sayfa üstü ve altı alanlarını özelleştirmenize olanak tanır. Örneğin:\n\\usepackage{fancyhdr}\\pagestyle{fancy}\n\\fancyhead[L]{Sol Başlık} % Sol üst başlık\n\\fancyhead[C]{Orta Başlık} % Orta üst başlık\n\\fancyhead[R]{Sağ Başlık} % Sağ üst başlık\n\\fancyfoot[L]{Sol Alt Bilgi} % Sol alt bilgi\n\\fancyfoot[C]{Orta Alt Bilgi} % Orta alt bilgi\n\\fancyfoot[R]{Sağ Alt Bilgi} % Sağ alt bilgi\nBu paket yüklendikten sonra, sayfa başlıkları ve altbilgileri üzerinde tam kontrol sahibi olabilirsiniz. Daha fazla bilgi ve seçenekler için fancyhdr paketinin dokümantasyonuna fancyhdr package adresinden ulaşabilirsiniz.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Geometri Ayarları</span>"
    ]
  },
  {
    "objectID": "chapters/resim-ekleme.html",
    "href": "chapters/resim-ekleme.html",
    "title": "4  Resim Ekleme ve Ayarları",
    "section": "",
    "text": "\\(\\LaTeX\\) dokümanlarına resim eklemek için graphicx paketini kullanabilirsiniz. Bu paket, çeşitli resim formatlarını destekler ve resimlerin boyutlandırılması, döndürülmesi gibi işlemleri kolaylaştırır. Aşağıda, graphicx paketinin nasıl yükleneceği ve kullanılacağına dair bir örnek verilmiştir:\n\\usepackage{graphicx}\n\\begin{document}\n\\includegraphics[width=\\textwidth]{resim.png}\n\\end{document}  \nBu komutu dokümanınızın preamble (ön ayar) kısmına ekleyerek graphicx paketini yükleyebilirsiniz. Resmi eklemek için ise \\includegraphics komutunu kullanabilirsiniz. Yukarıdaki örnekte, width=\\textwidth parametresi ile resmin genişliğini sayfa genişliğine ayarladık. Resim dosyasının adı ve uzantısı {resim.png} kısmında belirtilmiştir. Resim eklerken dikkat etmeniz gereken bazı önemli noktalar şunlardır: - Resim dosyasının doküman ile aynı dizinde bulunması veya doğru bir yol belirtilmesi gerekir. - Desteklenen resim formatları arasında PNG, JPEG, PDF ve EPS bulunur. - Resim boyutlandırma için width, height, scale gibi parametreler kullanılabilir. - Resmi döndürmek için angle parametresi kullanılabilir, örneğin angle=90 ile resmi 90 derece döndürebilirsiniz. - Resimlerin hizalanması için center, flushleft, flushright gibi ortamlar kullanılabilir. Aşağıda, bir resmin nasıl ekleneceğine dair tam bir örnek verilmiştir:\n\\begin{document}\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=\\textwidth]{resim.png}\n\\end{figure}\n\\end{document}  \nBu örnekte, figure ortamı kullanılarak resim sayfa içinde ortalanmıştır. h! parametresi, resmin mümkün olan en yakın yere yerleştirilmesini sağlar. Resim ekleme işlemi bu şekilde gerçekleştirilir.\nEklenen resimlere başlık eklemek ve referans vermek için caption ve label komutlarını kullanabilirsiniz. Aşağıda, bir resme başlık ekleme ve referans verme örneği verilmiştir:\n\\begin{document}\n\\begin{figure}[h!]\n\\centering\n\\includegraphics[width=\\textwidth]{resim.png}\n\\caption{Bu bir resim başlığıdır.}\n\\label{fig:resim}\n\\end{figure}\n\\end{document}\nBu örnekte, \\caption komutu ile resme bir başlık eklendik ve \\label komutu ile resme bir etiket verdik. Bu etiketi kullanarak dokümanın başka bir yerinde resme referans verebilirsiniz. Örneğin, \\ref{fig:resim} komutu ile resmin numarasını dokümanın başka bir yerinde gösterebilirsiniz. \\ref{} komutu, resmin numarasını otomatik olarak günceller, böylece resim ekleme veya silme işlemlerinde referanslarınız doğru kalır. Aşağıda, resme referans verme örneği verilmiştir:\nDokümanın başka bir yerinde resme referans vermek için:\n\\ref{fig:resim}\nBu örnekte, \\ref{fig:resim} komutu kullanılarak resmin numarası dokümanın başka bir yerinde gösterilmiştir. Bu sayede, resimlere kolayca referans verebilir ve dokümanınızın düzenini koruyabilirsiniz.\n\nResim Ayarları ve Özelleştirme\n\nResimlerin doküman içindeki konumunu ve görünümünü özelleştirmek için çeşitli ayarlar ve paketler kullanabilirsiniz. İşte bazı yaygın kullanılan ayarlar ve paketler: - Boyutlandırma: Resimlerin boyutlarını width, height, ve scale parametreleri ile ayarlayabilirsiniz. Örneğin, width=0.5\\textwidth ile resmin genişliğini sayfa genişliğinin yarısı yapabilirsiniz. - Döndürme: Resimleri angle parametresi ile döndürebilirsiniz. Örneğin, angle=45 ile resmi 45 derece döndürebilirsiniz. - Hizalama: Resimleri center, flushleft, ve flushright ortamları ile hizalayabilirsiniz. Örneğin, \\begin{center} ... \\end{center} ile resmi ortalayabilirsiniz. - Çerçeve Ekleme: Resimlere çerçeve eklemek için fancybox paketini kullanabilirsiniz. Bu paket, resimlerin etrafına çeşitli stillerde çerçeveler eklemenizi sağlar. Aşağıda, fancybox paketinin nasıl yükleneceği ve kullanılacağına dair bir örnek verilmiştir:\n\\usepackage{fancybox}\n\\begin{document}\n\\begin{figure}[h!]\n\\centering\n\\fancybox{\n\\includegraphics[width=\\textwidth]{resim.png}\n}\n\\end{figure}    \n\\end{document}\nBu komutu dokümanınızın preamble (ön ayar) kısmına ekleyerek fancybox paketini yükleyebilirsiniz. Resmi çerçeve içine almak için ise \\fancybox{...} komutunu kullanabilirsiniz. Yukarıdaki örnekte, resim çerçeve içine alınmıştır.\n\nDiğer Faydalı Paketler\n\nResimlerle çalışırken kullanabileceğiniz bazı diğer faydalı paketler şunlardır:\n\nsubcaption: Birden fazla resmi yan yana veya alt alta yerleştirmek için kullanılır. Her resme ayrı başlık ekleyebilirsiniz.\nsubcaption: Birden fazla resmi yan yana veya alt alta yerleştirmek için kullanılır. Her resme ayrı başlık ekleyebilirsiniz.\nwrapfig: Metin etrafında resimlerin sarılmasını sağlar.\nfloat: Resimlerin konumlandırılmasını daha hassas kontrol etmenizi sağlar. H parametresi ile resmi tam olarak istediğiniz yere yerleştirebilirsiniz. Örneğin:\n\n\\begin{document}\n\\begin{figure}[H]\n\\centering\n\\includegraphics[width=\\textwidth]{resim.png}\n\\end{figure}\n\\end{document}\nBu komutu dokümanınızın preamble (ön ayar) kısmına ekleyerek float paketini yükleyebilirsiniz. Resmi tam olarak istediğiniz yere yerleştirmek için ise H parametresini kullanabilirsiniz. Yukarıdaki örnekte, resim tam olarak belirtilen konuma yerleştirilmiştir. - adjustbox: Resimlerin boyutlandırılması, döndürülmesi ve diğer ayarlarını daha esnek bir şekilde yapmanızı sağlar. - tikz: Vektör tabanlı grafikler ve diyagramlar oluşturmak için güçlü bir araçtır. Bu paketler ve ayarlar, \\(\\LaTeX\\) dokümanlarınıza resim eklerken size büyük esneklik ve kontrol sağlar. İhtiyaçlarınıza göre bu paketleri kullanarak resimlerinizi istediğiniz şekilde düzenleyebilirsiniz.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Resim Ekleme ve Ayarları</span>"
    ]
  },
  {
    "objectID": "chapters/listeleme.html",
    "href": "chapters/listeleme.html",
    "title": "5  Listeleme ve Madde İşaretleri",
    "section": "",
    "text": "\\(\\LaTeX\\) dokümanlarında listeleme yapmak için itemize, enumerate ve description gibi ortamları kullanabilirsiniz. Bu ortamlar, madde işaretli listeler, numaralandırılmış listeler ve tanımlama listeleri oluşturmanıza olanak tanır. Aşağıda, bu ortamların nasıl kullanılacağına dair örnekler verilmiştir:\n\\begin{itemize}\n  \\item Madde 1\n  \\item Madde 2\n  \\item Madde 3\n\\end{itemize}\n\n```latex\n\\begin{enumerate}\n  \\item Birinci\n  \\item İkinci\n  \\item Üçüncü\n\\end{enumerate}\n\n```latex\n\\begin{description}\n  \\item[Öğe 1] Açıklama 1\n  \\item[Öğe 2] Açıklama 2\n  \\item[Öğe 3] Açıklama 3\n\\end{description}\nBu örneklerde görüldüğü gibi, itemize ortamı madde işaretli listeler oluştururken, enumerate ortamı numaralandırılmış listeler oluşturur. description ortamı ise her öğe için bir başlık ve açıklama sağlar. Ayrıca, liste öğelerini iç içe kullanarak daha karmaşık yapılar oluşturabilirsiniz. Örneğin:\n\\begin{itemize}\n  \\item Madde 1\n  \\begin{itemize}\n    \\item Alt madde 1\n    \\item Alt madde 2\n  \\end{itemize}\n  \\item Madde 2\n  \\item Madde 3\n\\end{itemize}\nBu örnekte, itemize ortamı içinde başka bir itemize ortamı kullanarak alt maddeler oluşturduk. Benzer şekilde, enumerate ve description ortamları da iç içe kullanılabilir. Listeleme ortamlarının görünümünü özelleştirmek için çeşitli paketler de mevcuttur. Örneğin, enumitem paketi, liste ortamlarının etiketlerini, boşluklarını ve diğer özelliklerini özelleştirmenize olanak tanır. Aşağıda, enumitem paketinin nasıl yükleneceği ve kullanılacağına dair bir örnek verilmiştir:\n\\usepackage{enumitem}\n\\begin{document}\n\\begin{itemize}[label=\\textbullet, leftmargin=*]\n  \\item Madde 1\n  \\item Madde 2\n  \\item Madde 3\n\\end{itemize}\n\\end{document}\nBu komutu dokümanınızın preamble (ön ayar) kısmına ekleyerek enumitem paketini yükleyebilirsiniz. label parametresi ile madde işaretlerini özelleştirebilir ve leftmargin parametresi ile liste kenar boşluklarını ayarlayabilirsiniz. Yukarıdaki örnekte, madde işaretleri olarak dolu yuvarlak (\\textbullet) kullanılmış ve kenar boşlukları kaldırılmıştır. Ayrıca, paralist paketi de listeleme ortamlarını daha esnek hale getirir ve farklı liste stilleri oluşturmanıza olanak tanır. Aşağıda, paralist paketinin nasıl yükleneceği ve kullanılacağına dair bir örnek verilmiştir:\n\\usepackage{paralist}\n\\begin{document}\n\\begin{compactitem}\n  \\item Madde 1\n  \\item Madde 2\n  \\item Madde 3\n\\end{compactitem}\n\\end{document}\nNumara yerine harf veya Roma rakamları kullanmak için enumerate ortamında enumitem paketini kullanabilirsiniz. Örneğin:\n\\usepackage{enumitem}\n\\begin{document}\n\\begin{enumerate}[label=\\alph*.]\n  \\item Birinci\n  \\item İkinci\n  \\item Üçüncü\n\\end{enumerate}\n\\end{document}\nBu örnekte, label=\\alph*. parametresi ile liste öğeleri küçük harflerle numaralandırılmıştır. Benzer şekilde, \\Alph* büyük harfler, \\roman* küçük Roma rakamları ve \\Roman* büyük Roma rakamları için kullanılabilir. Listeleme ortamları, \\(\\LaTeX\\) dokümanlarında düzenli ve okunabilir içerik oluşturmak için oldukça kullanışlıdır. İhtiyaçlarınıza göre bu ortamları ve paketleri kullanarak listeleme işlemlerini kolayca gerçekleştirebilirsiniz.\n\nParagraf ve Başlık Ayarları\n\n\\(\\LaTeX\\) dokümanlarında paragraf ve başlık ayarlarını özelleştirmek için çeşitli paketler ve komutlar bulunmaktadır. Aşağıda, bu ayarların nasıl yapılacağına dair örnekler verilmiştir:\n\\usepackage{parskip}\n\\begin{document}\n\\begin{parskip}\nBu, paragraflar arasında boşluk bırakır ve paragraf başlarındaki girintileri kaldırır.\n\\end{parskip}\n\\end{document}  \nBu örnekte, parskip paketi kullanılarak paragraflar arasına boşluk eklenmiş ve paragraf başlarındaki girintiler kaldırılmıştır. Bu, özellikle akademik ve teknik dokümanlarda daha temiz bir görünüm sağlar. Benzer şekilde, indentfirst paketi kullanılarak dokümandaki ilk paragrafın da diğer paragraflar gibi girintili olması sağlanabilir. Aşağıda, indentfirst paketinin nasıl yükleneceği ve kullanılacağına dair bir örnek verilmiştir:\n\\usepackage{indentfirst}\n\\begin{document}\n\\section{Giriş}\nBu, ilk paragraftır.\n\\end{document}",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Listeleme ve Madde İşaretleri</span>"
    ]
  },
  {
    "objectID": "chapters/matematik.html",
    "href": "chapters/matematik.html",
    "title": "6  Formül ve Denklemler",
    "section": "",
    "text": "\\(\\LaTeX\\) dokümanlarında formül ve denklemler oluşturmak için çeşitli yöntemler bulunmaktadır. Aşağıda, bu yöntemlerin nasıl kullanılacağına dair örnekler verilmiştir:\n\\begin{equation}\nF=\\dfrac{dp}{dt}\n\\end{equation}\n\n```latex\n\\begin{align}\na^2 + b^2 &= c^2 \\\\\n\\int_0^1 x^2 \\, dx &= \\frac{1}{3}\n\\end{align}\n\n```latex\n\\begin{gather}\nx + y = z \\\\\nx - y = w\n\\end{gather}\nBu örneklerde görüldüğü gibi, equation ortamı tek bir denklemi numaralandırarak yazarken, align ortamı birden fazla denklemi hizalı bir şekilde yazmanıza olanak tanır. gather ortamı ise birden fazla denklemi merkezde hizalayarak yazmanıza olanak tanır. Ayrıca, formül ve denklemleri iç içe kullanarak daha karmaşık yapılar oluşturabilirsiniz. Örneğin:\n\\begin{equation}\n\\begin{aligned}\nE &= mc^2 \\\\\nF &= ma\n\\end{aligned}\n\\end{equation}\nBu örnekte, aligned ortamı içinde birden fazla denklemi hizalı bir şekilde yazdık. Benzer şekilde, align ve gather ortamları da iç içe kullanılabilir. Formül ve denklemlerin görünümünü özelleştirmek için çeşitli paketler de mevcuttur. Örneğin, amsmath paketi, formül ve denklemlerin düzenini ve numaralandırılmasını özelleştirmenize olanak tanır. Aşağıda, amsmath paketinin nasıl yükleneceği ve kullanılacağına dair bir örnek verilmiştir:\n\\usepackage{amsmath}\n\\begin{document}\n\\begin{equation}\nE = mc^2\n\\end{equation}\n\\end{document}\nBu komutu dokümanınızın preamble (ön ayar) kısmına ekleyerek amsmath paketini yükleyebilirsiniz. align ve gather ortamları gibi daha fazla özellikten yararlanabilirsiniz. Yukarıdaki örnekte, equation ortamı içinde bir denklemi yazdık. Formül ve denklemleri yazarken, matematiksel sembollerin doğru bir şekilde görüntülenmesi için math modunu kullanmalısınız. Örneğin:\n\\begin{document}\n\\begin{equation}\nE = mc^2\n\\end{equation}\n\\end{document}\nBu örnekte, equation ortamı içinde bir denklemi yazdık. Benzer şekilde, align ve gather ortamları da kullanılabilir. Formül ve denklemler, \\(\\LaTeX\\) dokümanlarında düzenli ve okunabilir içerik oluşturmak için oldukça kullanışlıdır. İhtiyaçlarınıza göre bu ortamları ve paketleri kullanarak formül ve denklemleri kolayca gerçekleştirebilirsiniz.\nSatır içi formüller için $...$ veya \\(...\\) kullanabilirsiniz. Örneğin, \\(F=\\dfrac{dp}{dt}\\) veya (F=) şeklinde yazabilirsiniz.\n\nAna Semboller ve Operatörler\n\nMatematiksel ifadelerde sıkça kullanılan bazı semboller ve operatörler şunlardır:\n\nToplama: +\nÇıkarma: -\nÇarpma: *\nBölme: /\nEşittir: =\nYaklaşık eşittir: \\approx\nDenklem: \\equiv\nSonsuzluk: \\infty\nKarekök: \\sqrt{}\nÜs: {}^\nAlt simge: {}_\nKesir: \\frac{}{} veya \\dfrac{}{} (daha büyük kesirler için)\nLimit: \\lim_{x \\to a}\nToplam: \\sum_{i=1}^{n}\nİntegral: \\int_{a}^{b}\nParantezler: (), [], {}, \\left( \\right), \\left[ \\right], \\left\\{ \\right\\}\nYunan harfleri: \\alpha, \\beta, \\gamma, \\delta, \\epsilon, \\zeta, \\eta, \\theta, \\iota, \\kappa, \\lambda, \\mu, \\nu, \\xi, \\pi, \\rho, \\sigma, \\tau, \\upsilon, \\phi, \\chi, \\psi, \\omega\n\nDaha fazla bilgi ve seçenekler için amsmath paketinin dokümantasyonuna amsmath package adresinden ulaşabilirsiniz.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Formül ve Denklemler</span>"
    ]
  },
  {
    "objectID": "chapters/tablolama.html",
    "href": "chapters/tablolama.html",
    "title": "7  Tablo Oluşturma",
    "section": "",
    "text": "\\(\\LaTeX\\) dokümanlarında tablo oluşturmak için çeşitli yöntemler bulunmaktadır. Aşağıda, bu yöntemlerin nasıl kullanılacağına dair örnekler verilmiştir:\n\\begin{table}[h]\n\\centering\n\\begin{tabular}{|c|c|c|}\n\\hline\nBaşlık 1 & Başlık 2 & Başlık 3 \\\\\n\\hline\nVeri 1  & Veri 2  & Veri 3  \\\\\nVeri 4  & Veri 5  & Veri 6  \\\\\n\\hline\n\\end{tabular}\n\\caption{Örnek Tablo}\n\\label{tab:ornek}\n\\end{table}\nBu örnekte, table ortamı içinde bir tablo oluşturduk. tabular ortamı, tablonun yapısını belirler ve sütunların hizalanmasını sağlar. |c|c|c| ifadesi, üç sütun olduğunu ve her birinin ortalanacağını belirtir. \\hline komutu, yatay çizgiler ekler. \\caption komutu tabloya bir başlık ekler ve \\label komutu tabloya bir etiket verir, böylece dokümanın başka bir yerinde tabloya referans verebilirsiniz. Aşağıda, tabloya referans verme örneği verilmiştir:\nDokümanın başka bir yerinde tabloya referans vermek için:\n\\ref{tab:ornek} \nBu örnekte, \\ref{tab:ornek} komutu kullanılarak tablonun numarası dokümanın başka bir yerinde gösterilmiştir. Bu sayede, tablolara kolayca referans verebilir ve dokümanınızın düzenini koruyabilirsiniz. Ayrıca, tablonun görünümünü özelleştirmek için çeşitli paketler de mevcuttur. Örneğin, booktabs paketi, daha profesyonel görünümlü tablolar oluşturmanıza olanak tanır. Aşağıda, booktabs paketinin nasıl yükleneceği ve kullanılacağına dair bir örnek verilmiştir:\n\\usepackage{booktabs}   \n\\begin{document}\n\\begin{table}[h]\n\\centering\n\\begin{tabular}{c c c}\n\\hline\nBaşlık 1 & Başlık 2 & Başlık 3 \\\\\n\\hline\nVeri 1  & Veri 2  & Veri 3  \\\\\nVeri 4  & Veri 5  & Veri 6  \\\\\n\\hline\n\\end{tabular}\n\\caption{Örnek Tablo}\n\\label{tab:ornek}\n\\end{table}\n\\end{document}\nBu komutu dokümanınızın preamble (ön ayar) kısmına ekleyerek booktabs paketini yükledik. booktabs paketi, \\toprule, \\midrule ve \\bottomrule gibi komutlar sağlar, böylece tablolarınızın çizgilerini daha estetik hale getirebilirsiniz. Yukarıdaki örnekte, \\hline komutları yerine booktabs komutlarını kullanarak daha profesyonel görünümlü bir tablo oluşturabilirsiniz.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Tablo Oluşturma</span>"
    ]
  },
  {
    "objectID": "chapters/tikz.html",
    "href": "chapters/tikz.html",
    "title": "8  Tikz ile Çizim",
    "section": "",
    "text": "\\(\\LaTeX\\) dokümanlarında çizim yapmak için TikZ paketi kullanılabilir. Aşağıda, TikZ ile basit bir çizim yapmanın örneği verilmiştir:\n\\usepackage{tikz}\n\\begin{document}\n\\begin{tikzpicture}\n\\draw (0,0) -- (1,1);\n\\end{tikzpicture}\n\\end{document}\n---\n**TikZ örneklerinin PDF çıktısını indirmek için:**\n[PDF olarak indir](../Tikz-kod/tikz_ornekleri.pdf)\nTikz ile çizim yapmada standalone sınıfını kullanmak uygundur. Aşağıda, standalone sınıfı ile TikZ çizimi yapmanın örneği verilmiştir:\n\\documentclass[tikz,border=10pt]{standalone}\n\\begin{document}\n\\begin{tikzpicture}\n\\draw (0,0) -- (1,1);\n\\end{tikzpicture}\n\\end{document}\n\ndraw Komutu\n\ndraw komutu, TikZ ile çizim yaparken en temel komutlardan biridir. Bu komut, çizgiler, şekiller ve yollar çizmek için kullanılır. Aşağıda, draw komutunun nasıl kullanılacağına dair bazı örnekler verilmiştir:\n\\begin{tikzpicture}\n\\draw (0,0) -- (2,2); % İki nokta arasında düz bir çizgi çizer\n\\draw (0,0) rectangle (2,1); % Dikdörtgen çizer\n\\draw (1,1) circle (1cm); % Yarıçapı 1 cm olan bir daire çizer\n\\draw (0,0) -- (1,2) -- (2,0); % Çokgen çizer\n\\end{tikzpicture}   \nTikz çizim birimi olarak santimetre (cm) kullanılır. Örneğin, bir çizgi çizerken koordinatları santimetre cinsinden belirtebilirsiniz:\n\\begin{tikzpicture}\n\\draw (0,0) -- (2,0); % 2 cm uzunluğunda bir yatay çizgi çizer\n\\end{tikzpicture}\nAyrıca, draw komutuyla çizilen şekillerin renklerini ve kalınlıklarını da ayarlayabilirsiniz. Örneğin:\n\\begin{tikzpicture}\n\\draw[red, thick] (0,0) -- (2,2); % Kırmızı ve kalın bir çizgi çizer\n\\draw[blue, dashed] (0,0) rectangle (2,1); % Mavi ve kesikli bir dikdörtgen çizer\n\\draw[green, fill=yellow] (1,1) circle (1cm); % Yeşil ve sarı bir daire çizer\n\\end{tikzpicture}\nTikz ile oklar çizmek için -&gt; sembolünü kullanabilirsiniz. Örneğin:\n\\begin{tikzpicture}\n\\draw (0,0) -&gt; (2,2); % Başında ok olan bir çizgi çizer\n\\draw[-&gt;] (0,0) -- (2,0); % Başında ok olan yatay bir çizgi çizer\n\\end{tikzpicture}\nDaha karmaşık şekiller ve yollar çizmek için to, arc, bend, cycle gibi ek komutlar da kullanılabilir. Örneğin:\n\\begin{tikzpicture}\n\\draw (0,0) to (2,2); % İki nokta arasında düz bir çizgi çizer\n\\draw (0,0) arc (0:180:1cm); % Yarıçapı 1 cm olan bir yay çizer\n\\draw (0,0) -- (1,2) -- (2,0) -- cycle; % Çokgen çizer ve kapatır\n\\end{tikzpicture}   \n\nnode Komutu\n\nnode komutu, TikZ ile çizim yaparken metin kutuları veya etiketler eklemek için kullanılır. Bu komut, belirli bir konuma metin yerleştirmek için oldukça kullanışlıdır. Aşağıda, node komutunun nasıl kullanılacağına dair bazı örnekler verilmiştir:\n\\begin{tikzpicture}\n\\draw (0,0) -- (1,1) node[midway, above] {A};\n\\draw (1,0) -- (0,1) node[midway, below] {B};\n\\end{tikzpicture}   \nBu örnekte, node komutu ile çizgi ortasına “A” ve “B” etiketleri eklenmiştir. midway parametresi, etiketin çizgi ortasına yerleştirilmesini sağlar. above ve below parametreleri ise etiketin çizginin üstünde veya altında konumlandırılmasını sağlar.\n\ncoordinate Komutu\n\ncoordinate komutu, TikZ ile çizim yaparken belirli bir koordinat noktasını tanımlamak için kullanılır. Bu komut, çizimlerde referans noktaları oluşturmak için oldukça faydalıdır. Aşağıda, coordinate komutunun nasıl kullanılacağına dair bazı örnekler verilmiştir:\n\\begin{tikzpicture}\n\\coordinate (A) at (0,0);\n\\coordinate (B) at (1,1);\n\\draw (A) -- (B);\n\\end{tikzpicture}\nBu örnekte, coordinate komutu ile “A” ve “B” adlı iki koordinat noktası tanımlanmış ve bu noktalar arasında bir çizgi çizilmiştir. at parametresi, koordinatın konumunu belirler.\n\npath Komutu\n\npath komutu, TikZ ile çizim yaparken bir yol (path) tanımlamak için kullanılır. Bu komut, birden fazla çizgi ve şekli bir arada tanımlamak için oldukça kullanışlıdır. Aşağıda, path komutunun nasıl kullanılacağına dair bazı örnekler verilmiştir:\n\\begin{tikzpicture}\n\\path (0,0) -- (1,1) -- (2,0);\n\\draw (0,0) -- (1,1) -- (2,0);\n\\end{tikzpicture}\nBu örnekte, path komutu ile bir yol tanımlanmış ve ardından draw komutu ile bu yol çizilmiştir. path komutu, karmaşık şekiller ve yollar oluşturmak için kullanılabilir.\n\nfill Komutu\n\nfill komutu, TikZ ile çizim yaparken kapalı şekilleri doldurmak için kullanılır. Bu komut, belirli bir alanı renk veya desen ile doldurmak için oldukça faydalıdır. Aşağıda, fill komutunun nasıl kullanılacağına dair bazı örnekler verilmiştir:\n\\begin{tikzpicture}\n\\fill[red] (0,0) rectangle (2,1); % Kırmızı bir dikdörtgen doldurur\n\\fill[blue] (1,1) circle (1cm); % Mavi bir daire doldurur\n\\end{tikzpicture}\nBu örnekte, fill komutu ile kırmızı bir dikdörtgen ve mavi bir daire doldurulmuştur. fill komutu, kapalı şekillerin içini renklendirmek için kullanılır ve draw komutu ile birlikte kullanılabilir.\n\nclip Komutu\n\nclip komutu, TikZ ile çizim yaparken belirli bir alanı kesmek için kullanılır. Bu komut, genellikle karmaşık şekillerin içini doldurmak veya belirli bir alanı vurgulamak için kullanılır. Aşağıda, clip komutunun nasıl kullanılacağına dair bazı örnekler verilmiştir:\n\\begin{tikzpicture}\n\\fill[red] (0,0) rectangle (2,1);\n\\begin{scope}\n\\clip (1,0) circle (1cm);\n\\fill[blue] (0,0) rectangle (2,1);\n\\end{scope}\n\\end{tikzpicture}\nBu örnekte, clip komutu ile mavi dolgu yalnızca kırmızı dikdörtgenin içindeki daire alanında görünür. scope ortamı, kesme işlemini sınırlamak için kullanılır. Bu örnekte, clip komutunun nasıl çalıştığını ve belirli bir alanı nasıl kesebileceğinizi göstermektedir.\nTikz ortamında çizim yaparken babel paketini kullanıyorsanız, \\usetikzlibrary{babel} komutunu preamble kısmına eklemeniz önerilir. Bu, Tikz’in Türkçe karakterlerle uyumlu çalışmasını sağlar. Örneğin:\n\\documentclass{article}\n\\usepackage[turkish, shorthands=:!]{babel}\n\\usepackage{tikz}  \n\\usetikzlibrary{babel}\n\\begin{document} \n\\begin{document}\n\\begin{tikzpicture}\n\\draw (0,0) -- (1,1) node[midway, above] {Çizim Örneği};\n\\end{tikzpicture}\n\\end{document}\nBu örnekte, \\usetikzlibrary{babel} komutu ile Tikz’in Türkçe karakterlerle uyumlu çalışması sağlanmıştır. Böylece, çizimlerde Türkçe karakterler sorunsuz bir şekilde kullanılabilir.\nBu örnekte, \\usetikzlibrary{babel} komutu ile Tikz’in Türkçe karakterlerle uyumlu çalışması sağlanmıştır. Böylece, çizimlerde Türkçe karakterler sorunsuz bir şekilde kullanılabilir.\nDaha fazla bilgi ve örnekler için Tikz paketinin dokümantasyonuna TikZ & PGF Manual adresinden ulaşabilirsiniz.\n\nTikZ örneklerinin PDF çıktısını indirmek için: PDF olarak indir",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Tikz ile Çizim</span>"
    ]
  }
]